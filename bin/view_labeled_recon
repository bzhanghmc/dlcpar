#!/usr/bin/env python
# adapted from projects/rasmus/bin/vistrans

# python libraries
import os, sys, optparse

# dlcpar libraries
import dlcpar
from dlcpar import reconlib
from dlcpar.vis import reconsvg

# rasmus libraries
from rasmus import treelib

#=============================================================================
# parser

parser = optparse.OptionParser(usage="%prog [options] <filename prefix>")
parser.add_option("-s", "--stree", dest="stree",
                  metavar="<species tree>",
                  help="species tree in newick format")
parser.add_option("-v", "--viewer", dest="viewer",
                  metavar="<svg viewer>",
                  default="display")
parser.add_option("--xscale", dest="xscale",
                  metavar="<x-scaling>",
                  type="float", default=50)
parser.add_option("--yscale", dest="yscale",
                  metavar="<y-scaling>",
                  type="float", default=50)
parser.add_option("--names", dest="names",
                  action="store_true",
                  default=False,
                  help="display internal node names")
parser.add_option("--snames", dest="snames",
                  action="store_true",
                  default=False,
                  help="display species names")
parser.add_option("-o", "--output", dest="output",
                  metavar="<output>")


#=============================================================================
# main

options, args = parser.parse_args()

stree = treelib.read_tree(options.stree)
gtree, extra = reconlib.read_labeled_recon(args[0], stree)

# output
if options.output:
    stream = options.output
else:
    stream = os.popen(options.viewer, "w")

# label node names
labels = {}
if options.names:
    for node in gtree:
        if not node.is_leaf():
            labels[node.name] = "[%s]" % node.name

# label species names
slabels = {}
if options.snames:
    for snode in stree:
        if not snode.is_leaf():
            slabels[snode.name] = "%s" % snode.name

# draw tree
reconsvg.draw_tree(gtree, stree, extra, filename=stream,
                   xscale=options.xscale, yscale=options.yscale,
                   labels=labels,
                   slabels=slabels)

# close output
if not options.output:
    stream.close()
